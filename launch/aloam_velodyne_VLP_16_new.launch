<launch>
    <include file="$(find subt_example)/launch/teleop.launch"/>
    
    <arg name="robot"                    default="X1"/>
    <arg name="mapFrame"                    default="$(arg robot)/map"/>
    <arg name="mappingFrame"                    default="aft_mapped"/>
    <arg name="baselinkFrame"                    default="$(arg robot)"/>
    <arg name="lidarFrame"                    default="X1/base_link/front_laser"/>

    <param name="mapFrame" type="string" value="$(arg mapFrame)"/>
    <param name="mappingFrame" type="string" value="$(arg mappingFrame)"/>
    <param name="frame1From" type="string" value="$(arg mapFrame)"/>
    <param name="frame1To" type="string" value="$(arg mappingFrame)"/>
    <param name="frame2From" type="string" value="$(arg baselinkFrame)"/>
    <param name="frame2To" type="string" value="$(arg lidarFrame)"/>

    <param name="scan_line" type="int" value="16" />

    <!-- if 1, do mapping 10 Hz, if 2, do mapping 5 Hz. Suggest to use 1, it will adjust frequence automaticlly -->
    <param name="mapping_skip_frame" type="int" value="1" />

    <!-- remove too closed points -->
    <param name="minimum_range" type="double" value="0.3"/>


    <param name="mapping_line_resolution" type="double" value="0.2"/>
    <param name="mapping_plane_resolution" type="double" value="0.4"/>

    <node pkg="aloam_velodyne" type="ascanRegistration" name="ascanRegistration" output="screen" />

    <node pkg="aloam_velodyne" type="alaserOdometry" name="alaserOdometry" output="screen" />

    <node pkg="aloam_velodyne" type="alaserMapping" name="alaserMapping" output="screen" />

<!-- Node computing differential transformation between camera_init and X1 -->
    
    <node pkg="aloam_velodyne" type="diffTransNode" name="diffTransNode" output="screen"/>
    <arg name="rviz" default="true" />
    <group if="$(arg rviz)">
    <node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find aloam_velodyne)/rviz_cfg/aloam_velodyne.rviz" />
    </group>

<!-- ground truth nody -->
 <node name="ground_truth_publisher" pkg="subt_virtual" type="ground_truth_publisher">
        <param name="robot_name" value="$(arg robot)"/>
    </node>

<node name="subt_frame_publisher" pkg="subt_virtual" type="subt_frame_publisher">
        <param name="robot_name" value="$(arg robot)"/>
    </node>



</launch>
